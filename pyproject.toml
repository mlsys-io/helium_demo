[project]
name = "helium"
version = "0.1.0"
description = "Optimizing Prefix Caching in Agentic Workflows"
readme = "README.md"
requires-python = "<3.13,>=3.11"
dependencies = [
    "fastapi[standard]>=0.115.6,<1.0.0",
    "openai>=1.58.1,<2.0.0",
    "backoff>=2.2.1,<3.0.0",
    "class-registry>=2.1.2,<3.0.0",
    "requests>=2.32.3,<3.0.0",
    "aiohttp>=3.11.11,<4.0.0",
    "shortuuid>=1.0.13,<2.0.0",
    "pandas>=2.2.3,<3.0.0",
    "networkx[default]>=3.4.2,<4.0.0",
    "matplotlib>=3.10.1,<4.0.0",
    "setuptools>=80.9.0,<81.0.0",
    "cachetools>=6.2.0",
]

[dependency-groups]
flashinfer = [
    "flashinfer-python==0.2.2",
]
lint = [
    "black>=24.10.0,<25.0.0",
    "ruff>=0.8.5,<1.0.0",
    "mypy>=1.14.1,<2.0.0",
    "codespell>=2.3.0,<3.0.0",
    "isort>=5.13.2,<6.0.0",
    "types-requests>=2.32.0.20241016,<3.0.0.0",
    "types-cachetools>=6.2.0.20250827",
]
bench = [
    "agentscope[distribute]==0.1.6",
    "autogen-agentchat==0.2.40",
    "gdown>=5.2.0",
    "jsonlines>=4.0.0",
    "langchain-openai>=0.3.23",
    "langgraph>=0.4.8",
    "matplotlib>=3.10.0,<4.0.0",
    "nvidia-ml-py>=13.580.65",
    "types-pyyaml>=6.0.12.20250809",
]
dev = [
    "ipywidgets>=8.1.5,<9.0.0",
    "pyvis==0.3.1",
    "ipykernel>=6.29.5,<7.0.0",
]
test = [
    "pytest>=8.3.5,<9.0.0",
    "pytest-asyncio>=1.1.0",
    "pytest-timeout>=2.4.0,<3.0.0",
]

[tool.uv]
default-groups = []

[[tool.uv.index]]
name = "flashinfer"
url = "https://flashinfer.ai/whl/cu124/torch2.6/"

[tool.uv.sources]
flashinfer-python = { index = "flashinfer" }

[tool.isort]
profile = "black"
skip = ["src/vllm", "src/LMCache", "src/ParrotServe", ".venv"]

[tool.ruff]
target-version = "py311"
exclude = ["src/vllm", "src/LMCache", "src/ParrotServe", ".venv"]

[tool.black]
force-exclude = "(src/vllm|src/LMCache|src/ParrotServe|\\.venv)"

[tool.mypy]
explicit_package_bases = false
ignore_missing_imports = true
files = ["src/helium", "benchmark", "tests"]

[tool.codespell]
ignore-words-list = ["ans", "assertIn"]
skip = ["./poetry.lock", "*.csv", "tmp*", "./examples", "./src/vllm", "./src/LMCache", "./src/ParrotServe", "./.venv", "./logs", "data", "./notebooks", "./benchmark/lib"]

[tool.pyright]
exclude = ["src/vllm", "src/LMCache", "src/ParrotServe", "**/node_modules", "**/__pycache__", "**/.*"]
extraPaths = ["src/LMCache"]
deprecateTypingAliases = true
reportDeprecated = "warning"
reportPrivateImportUsage = "none"

[tool.pytest.ini_options]
testpaths = ["tests"]

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"
